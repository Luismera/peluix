{"version":3,"sources":["helpers/fetchMovie.js","assets/default.png","components/MovieCredits.js","components/MovieDetail.js","components/MovieGridItem.js","components/MovieGrid.js","hooks/useMovies.js","router/AppRouter.js","PeluixApp.js","index.js"],"names":["BASE_URL","process","getMovie","id","a","axios","get","params","api_key","language","getMovieCredits","MovieCredits","title","useState","credits","setCredits","useEffect","then","resp","data","cast","className","slice","map","credit","href","name","rel","target","alt","src","profile_path","imgDefault","character","MovieDetail","moment","movieId","useParams","history","useHistory","movie","setMovie","style","backgroundImage","backdrop_path","poster_path","dir","onClick","goBack","original_title","release_date","format","genres","genre","i","length","encodeURI","seconds","hour","Math","floor","minute","secondsToString","runtime","tagline","overview","MovieGridItem","url","useRouteMatch","to","MovieGrid","pageNumber","setPageNumber","loading","setLoading","error","setError","movies","setMovies","cancel","method","page","cancelToken","CancelToken","c","res","prevMovies","Set","results","m","catch","e","isCancel","useMovies","loader","useRef","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","current","observe","entities","isIntersecting","prevPageNumber","index","ref","AppRouter","exact","path","PeluixApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54f7cc0d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getMovies = async ( page = 1) => {\r\n\r\n    return await axios.get(`${ BASE_URL }/movie/popular`, { \r\n        params: { \r\n            page: page,\r\n            limit: 20,\r\n            api_key: process.env.REACT_APP_API_KEY,\r\n            language: \"es-ES\"\r\n        } \r\n    });\r\n\r\n}\r\n\r\n\r\nexport const getMovie = async (id) => {\r\n\r\n    return await axios.get(`${ BASE_URL }/movie/${ id }`, { \r\n        params: { \r\n            api_key: process.env.REACT_APP_API_KEY,\r\n            language: \"es-ES\"\r\n        } \r\n    });\r\n\r\n}\r\n\r\nexport const getMovieCredits = async (id) => {\r\n\r\n    return await axios.get(`${ BASE_URL }/movie/${ id }/credits`, { \r\n        params: { \r\n            api_key: process.env.REACT_APP_API_KEY,\r\n            language: \"es-ES\"\r\n        } \r\n    });\r\n\r\n}","export default __webpack_public_path__ + \"static/media/default.ca7e7861.png\";","import React, { useEffect, useState } from 'react';\r\nimport { getMovieCredits } from '../helpers/fetchMovie';\r\nimport imgDefault from '../assets/default.png';\r\n\r\nexport const MovieCredits = ( { id, title } ) => {\r\n\r\n    const [credits, setCredits] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            getMovieCredits(id).then((resp) => {\r\n                setCredits( resp.data.cast );\r\n            })\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"single_column\">\r\n                <section className=\"panel top_billed scroller\">\r\n                    <h3>Reparto principal</h3>\r\n                    <div id=\"cast_scroller\" className=\"scroller_wrap should_fade is_fading\">\r\n                    <ol className=\"people scroller\">\r\n                        {\r\n                            credits.slice(0, 9).map( credit => {\r\n                                return <li key={ credit.id } className=\"card\">\r\n                                            <a href={ `https://www.themoviedb.org/person/${credit.id}-${credit.name}` } rel=\"noreferrer\" target=\"_blank\">\r\n                                                <img className=\"profile\" alt={ credit.name } src={ credit.profile_path ? `https://image.tmdb.org/t/p/w185${ credit.profile_path }` : imgDefault } />\r\n                                            </a>\r\n                                            <p><a href={ `https://www.themoviedb.org/person/${credit.id}-${credit.name}` } rel=\"noreferrer\" target=\"_blank\">{ credit.name }</a></p>\r\n                                            <p className=\"character\">{ credit.character }</p>\r\n                                        </li>\r\n                            })\r\n                        }                        \r\n                        <li className=\"filler view_more\">\r\n                            <p><a href={ `https://www.themoviedb.org/movie/${id}-${title}/cast` } rel=\"noreferrer\" target=\"_blank\">Ver mÃ¡s <span className=\"mdi mdi-arrow-right\"></span></a></p>\r\n                        </li>\r\n                    </ol>\r\n                    <div className=\"style_wrapper\"></div>\r\n                    </div>\r\n                    <p className=\"new_button\"><a className=\"\" href={ `https://www.themoviedb.org/movie/${id}-${title}/cast` } rel=\"noreferrer\" target=\"_blank\">Reparto y equipo completo</a></p>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getMovie } from '../helpers/fetchMovie';\r\nimport * as moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { MovieCredits } from './MovieCredits';\r\nimport imgDefault from '../assets/default.png';\r\n\r\nexport const MovieDetail = () => {\r\n\r\n    moment.locale('es');\r\n\r\n    const { movieId } = useParams();\r\n    const history = useHistory();\r\n    const [movie, setMovie] = useState({})\r\n\r\n    useEffect(() => {\r\n        getMovie(movieId).then( (resp) => {\r\n            setMovie(resp.data);\r\n        })\r\n    }, [movieId])\r\n\r\n    const secondsToString = (seconds) => {\r\n        seconds = seconds * 60\r\n        var hour = Math.floor(seconds / 3600);\r\n        hour = (hour < 10)? '0' + hour : hour;\r\n        var minute = Math.floor((seconds / 60) % 60);\r\n        minute = (minute < 10)? '0' + minute : minute;\r\n        // var second = seconds % 60;\r\n        // second = (second < 10)? '0' + second : second;\r\n        return `${hour}h ${minute}m`;// hour + ':' + minute + ':' + second;\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"inner_content movie_content backdrop poster\">\r\n            <div className=\"header large border first\" style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${ movie.backdrop_path})` }}>\r\n                <div className=\"keyboard_s custom_bg\">\r\n                    <div className=\"single_column\">\r\n                        <section id=\"original_header\" className=\"images inner\">\r\n                            <div className=\"poster_wrapper\">\r\n                                <div className=\"poster\">\r\n                                <div className=\"image_content backdrop\">\r\n                                    <img className=\"poster lazyload lazyloaded\" src={ movie.poster_path ? `https://image.tmdb.org/t/p/w400${ movie.poster_path }` : imgDefault } alt={movie.title} />\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"header_poster_wrapper\">\r\n                                <section className=\"header poster\">\r\n                                    <div className=\"title ott_true\" dir=\"auto\">\r\n                                        <h2 className=\"24\">\r\n                                            <div onClick={() => history.goBack()}><i className=\"mdi mdi-arrow-left\"></i></div>\r\n                                            <a href=\"/\">{ movie.original_title }</a> \r\n                                            <span className=\"tag release_date\">({moment(movie.release_date).format('YYYY')})</span>\r\n                                        </h2>\r\n                                        <div className=\"facts\">\r\n                                            <span className=\"release\">\r\n                                            { moment(movie.release_date).format(\"LL\") }\r\n                                            </span>\r\n                                            <span className=\"genres\">\r\n                                            {\r\n                                                movie.genres?.map( (genre, i) => {\r\n                                                    if (movie.genres.length === i + 1) {\r\n                                                        return <a href={`https://www.themoviedb.org/genre/${ genre.id}-${ encodeURI(genre.name) }/movie`} rel=\"noreferrer\" target=\"_blank\" key={genre.id}>{genre.name}</a>\r\n                                                    } else {\r\n                                                        return <a href={`https://www.themoviedb.org/genre/${ genre.id}-${ encodeURI(genre.name) }/movie`} rel=\"noreferrer\" target=\"_blank\" key={genre.id}>{genre.name}, </a>\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                            </span>\r\n                                            <span className=\"runtime\">\r\n                                            { secondsToString(movie.runtime) }\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"header_info\">\r\n                                    <h3 className=\"tagline\" dir=\"auto\">{ movie.tagline }</h3>\r\n                                    <h3 dir=\"auto\">Vista general</h3>\r\n                                    <div className=\"overview\" dir=\"auto\">\r\n                                        <p>{ movie.overview }</p>\r\n                                    </div>\r\n                                </div>\r\n                                </section>\r\n                            </div>\r\n                        </section>\r\n                        <div id=\"ott_offers_window\" className=\"hidden\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MovieCredits { ...movie } />\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport * as moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport imgDefault from '../assets/default.png';\r\n\r\nexport const MovieGridItem = ( { id, title, release_date, poster_path, backdrop_path } ) => {\r\n\r\n    moment.locale('es');\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"image\">\r\n                <div className=\"wrapper\">\r\n                    <Link to={`${ url }/${ id }`} className=\"image\" title={ title }>\r\n                        <img src={ poster_path ? `https://image.tmdb.org/t/p/w300${ poster_path }` : imgDefault } className=\"poster\" alt={ title } />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <h2>\r\n                    <Link to={`${ url }/${ id }`} title={ title }>{ title }</Link>\r\n                </h2>\r\n                <p className=\"card-text\">{ moment(release_date).format(\"DD MMM YYYY\") }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { MovieGridItem } from './MovieGridItem'\r\nimport { useMovies } from '../hooks/useMovies';\r\n\r\n\r\nexport const MovieGrid = () => {\r\n\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const {\r\n        movies,\r\n        loading,\r\n        error\r\n    } = useMovies(pageNumber)\r\n\r\n    const loader  = useRef()\r\n    useEffect(() => {\r\n        var options = {\r\n           root: null,\r\n           rootMargin: \"20px\",\r\n           threshold: 1.0\r\n        };\r\n        // inicializar IntersectionObserver y lo enganchamos al div que contiene la referencia loader\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        if (loader.current) {\r\n           observer.observe(loader.current)\r\n        }\r\n\r\n    }, []);\r\n\r\n    // aquÃ­ manejamos lo que sucede cuando el usuario se desplaza al div \r\n    // que contiene la referencia loader en este caso, \r\n    // solo actualizamos la variable de PageNumber\r\n    const handleObserver = (entities) => {\r\n        const target = entities[0];  \r\n        if (target.isIntersecting) {   \r\n            setPageNumber((prevPageNumber) => prevPageNumber + 1)\r\n        }\r\n    }\r\n\r\n    // console.log(movies)\r\n\r\n    return (\r\n        <div className=\"content_wrapper\">\r\n            {/* <h2>PelÃ­culas populares</h2> */}\r\n            <div className=\"page_wrapper\">\r\n                {\r\n                    movies.map( (movie, index) => {\r\n                        return <MovieGridItem\r\n                                    key={ index } \r\n                                    { ...movie }\r\n                                />\r\n                    })\r\n                }\r\n            </div>\r\n            <div ref={loader}>{loading && 'Cargando...'}</div>\r\n            <div>{error && 'Error'}</div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// import { getMovies } from '../helpers/fetchMovie';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const useMovies = (pageNumber) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel\r\n        axios({\r\n          method: 'GET',\r\n          url: `${ BASE_URL }/movie/popular`,\r\n          params: { \r\n            page: pageNumber,\r\n            api_key: process.env.REACT_APP_API_KEY,\r\n            language: \"es-ES\"\r\n          },\r\n          cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then(res => {\r\n          setMovies(prevMovies => {\r\n            return [...new Set([...prevMovies, ...res.data.results.map(m => m )])]\r\n          })\r\n          setLoading(false)\r\n        }).catch(e => {\r\n          if (axios.isCancel(e)) return\r\n          setError(true)\r\n        })\r\n        return () => cancel()\r\n    }, [pageNumber])\r\n\r\n    return { loading, error, movies }\r\n    \r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { MovieDetail } from '../components/MovieDetail';\r\nimport { MovieGrid } from '../components/MovieGrid';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <header>\r\n                <h2><i className=\"mdi mdi-movie-roll\"></i>PELUIX</h2>\r\n            </header>\r\n            <main id=\"main\">\r\n                <Switch>\r\n                    <Route exact path=\"/movies\">\r\n                        <MovieGrid />\r\n                    </Route>\r\n                    <Route exact path=\"/movies/:movieId\">\r\n                        <MovieDetail />\r\n                    </Route>\r\n                    <Redirect to=\"/movies\" />   \r\n                </Switch>\r\n            </main>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const PeluixApp = () => {\r\n    return (\r\n        <>\r\n            <AppRouter />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { PeluixApp } from './PeluixApp';\n\nimport './index.scss';\n\nReactDOM.render(\n  <PeluixApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}